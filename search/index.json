[{"content":"資料庫管理系統（DBMS）是一種用於建立、維護和管理資料庫的軟體工具。它允許使用者操作資料庫，因此在日常使用中，當我們談論資料庫時，通常指的就是 DBMS，例如 MySQL。\nMySQL 基本架構 圖片來自：https://iter01.com/581014.html\n外掛式的儲存引擎架構將查詢處理和其它的系統任務以及資料的儲存提取相分離。這種架構允許根據業務需求和實際情況選擇合適的存儲引擎。\n1. 連線層 通訊機制： 該層包括本地 socket 通訊和大部分基於客戶端/服務端架構實現的類似於 TCP/IP 的通訊方式。 連線管理： 主要負責連線處理、授權認證，以及相關的安全機制。 Thread Pool： 引入 thread pool 的概念，為通過認證且安全接入的客戶端分配 thread。 安全連接： 該層可以實現基於 SSL 的安全連接。 權限驗證： 伺服器會為每個安全接入的客戶端驗證其操作權限。 2. 服務層 主要負責執行大多數核心服務功能。 伺服器會解析查詢語句，建立內部的解析樹，並對其進行優化，例如決定查詢表的順序，判斷是否使用索引等，最終生成相應的執行計劃。 所有跨儲存引擎的功能也在這一層實現。 SQL 接口(SQL interface)：負責接收使用者的 SQL 指令並返回所需的查詢結果。 解析器(Parser)：負責驗證和解析傳遞到解析器的 SQL 指令。 優化器(Optimizer)：在查詢執行前，使用查詢優化器對 SQL 語句進行優化，如根據 where 條件決定執行順序，例如先進行過濾還是先進行投影。 快取與緩衝區(Caches \u0026amp; Buffers)： 如果查詢快取中有匹配的結果，查詢語句可以直接從查詢快取中獲取數據。 這種快取機制由多個小型快取組成，例如表快取、記錄快取、鍵快取、權限快取等。 3. 儲存引擎層 負責 MySQL 中數據的存儲和檢索，伺服器透過 API 與存儲引擎進行交互。 4. 資料儲存層 主要將數據存儲在裸設備上運行的文件系統中，並實現與存儲引擎的互動。 MySQL 查詢流程 圖片來自：https://iter01.com/581014.html\n客戶端向 MySQL 伺服器發送查詢請求，經過進入 thread pool、授權檢查和分配 thread 的過程。 伺服器首先檢查查詢快取，如果命中快取，則直接返回快取中的結果（同時進行權限檢查）。如果沒有命中快取，則進入下一階段。 伺服器對 SQL 進行解析和預處理（包括處理解析器無法解決的語義問題和權限檢查），然後由優化器生成相應的執行計劃。 MySQL 根據執行計劃，調用存儲引擎的 API 來執行查詢。 將查詢結果返回給客戶端，並將查詢結果存入快取。 參考文章 MySQL 的架構 步步深入：MySQL 架構總覽 -\u0026gt; 查詢執行流程 -\u0026gt; SQL 解析順序 如何避免分析兩分鐘，運行兩小時？這是一份 SQL 優化大全 ","date":"2024-02-15T00:00:00Z","permalink":"https://peifish1124.github.io/p/study-mysql/","title":"MySQL 基本架構和查詢流程"},{"content":" : https://github.com/peifish1124/ChiTou\n後端技術架構 Express.js、Nginx APIs: 中央氣象局開放資料 API、LINE Bot Messaging API、Google Search API、ChatGPT OpenAI Deploy: AWS EC2 Database: AWS RDS 發想動機 希望解決使用者在安排出遊的時候會遇到的問題：\n懶得用編輯程式、共編規劃行程 要開多個平台去整合各種資訊：用 Google docs 來紀錄、用 Google search 來查景點、用 Google map 來查景點間的距離、查詢天氣 提出了多種方案但不知道大家想選哪個行程 需要預估交通時間、停留時間 因此我們 ChiTou 的核心概念就是：整合共編、Google Search、Google Map、天氣資訊 的平台，節省使用者在安排旅行所需要的時間，並提供包含旅程所需時間的最終規劃結果\n","date":"2023-09-05T00:00:00Z","image":"https://peifish1124.github.io/p/project-chitou/chitou-pic_hu2fdbb00736556baa186e5a430251d7bc_103108_120x120_fill_box_smart1_3.png","permalink":"https://peifish1124.github.io/p/project-chitou/","title":"ChiTou"},{"content":"後端技術架構 後端： Express.js AWS Cloud Service：AWS EC2、AWS RDS(MySQL)、AWS Load Balancer 容器化工具：Docker CICD： GitHub Actions 測試： Jest 壓力測試：K6 Cache、Rate Limiter：Redis 基本實作 用 middleware 的方式實作 JWT 驗證使用者身份 大頭貼部分是用 middleware 的方式透過 multer 來實作 利用 cursor pagination 處理分頁 使用 Redis 作為快取，以加速資料取得，並且作為 rate limiter，用 IP 來判斷使用者是否在一定時間內超過次數的進入網站 前後端串接時申請 SSL 並處理 CORS 問題 透過 Nginx 處理 Http/Https 的請求導向 使用 Docker Container 執行 MySQL、Nginx、Redis \u0026amp; Express 程式（Canchu） 透過 GitHub Actions 實作 CI/CD 完成自動化測試與部署至 Docker ","date":"2023-08-03T00:00:00Z","permalink":"https://peifish1124.github.io/p/project-canchu/","title":"Canchu"},{"content":" : https://github.com/peifish1124/Pathfinder\n因應教育部的 108 新課綱，我們推出探索生涯方向的 APP - Pathfinder ，從一開始的現行方案分析、接續經過三階段需求確認與測試的市場調查，最後聚焦於創造出一個專屬於高中生學習歷程、生涯探索的 App。立基於 ColleGo! 網站資料上，Pathfinder 串接三大功能：紀錄面板、儀表分析板、探索活動板，以個人化推薦、整合性的功能為關鍵特色，旨在為使用者打造個別專屬的生涯探索之旅。\n在 APP 中我們採用文字探勘技術，協助高中生透過日常紀錄挖掘自我興趣與能力，而在過程中我們並非只著重在資訊技術上的精進，我們使用敏捷開發、階段式的做使用者調查訪問、與教育機構合作、規劃短中長期的發展模式等。\n系統架構圖 前端：React Native 後端：GraphQL 部署：Heroku 資料庫：非關聯式資料庫 mongoDB 照片儲存：AWS S3 ","date":"2021-11-24T00:00:00Z","image":"https://peifish1124.github.io/p/project-pathfinder/pathfinder-pic_huf212e8a73d369849f02f4979a9032ced_406233_120x120_fill_box_smart1_3.png","permalink":"https://peifish1124.github.io/p/project-pathfinder/","title":"Pathfinder"}]