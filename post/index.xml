<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Pei-Yu Chen (Sophia)</title>
        <link>https://peifish1124.github.io/post/</link>
        <description>Recent content in Posts on Pei-Yu Chen (Sophia)</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <copyright>Peifish</copyright>
        <lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://peifish1124.github.io/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MySQL 基本架構和查詢流程</title>
        <link>https://peifish1124.github.io/p/study-mysql/</link>
        <pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://peifish1124.github.io/p/study-mysql/</guid>
        <description>&lt;p&gt;資料庫管理系統（DBMS）是一種用於建立、維護和管理資料庫的軟體工具。它允許使用者操作資料庫，因此在日常使用中，當我們談論資料庫時，通常指的就是 DBMS，例如 MySQL。&lt;/p&gt;
&lt;h3 id=&#34;mysql-基本架構&#34;&gt;MySQL 基本架構&lt;/h3&gt;
&lt;img src=&#34;mysql-structure.png&#34; style=&#34;width: 900px; height: 600px;&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;圖片來自：https://iter01.com/581014.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;外掛式的儲存引擎架構將查詢處理和其它的系統任務以及資料的儲存提取相分離。這種架構允許根據業務需求和實際情況選擇合適的存儲引擎。&lt;/p&gt;
&lt;h4 id=&#34;1-連線層&#34;&gt;1. 連線層&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通訊機制：&lt;/strong&gt; 該層包括本地 socket 通訊和大部分基於客戶端/服務端架構實現的類似於 TCP/IP 的通訊方式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;連線管理：&lt;/strong&gt; 主要負責連線處理、授權認證，以及相關的安全機制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thread Pool：&lt;/strong&gt; 引入 thread pool 的概念，為通過認證且安全接入的客戶端分配 thread。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全連接：&lt;/strong&gt; 該層可以實現基於 SSL 的安全連接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;權限驗證：&lt;/strong&gt; 伺服器會為每個安全接入的客戶端驗證其操作權限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-服務層&#34;&gt;2. 服務層&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主要負責執行大多數核心服務功能。&lt;/li&gt;
&lt;li&gt;伺服器會解析查詢語句，建立內部的解析樹，並對其進行優化，例如決定查詢表的順序，判斷是否使用索引等，最終生成相應的執行計劃。&lt;/li&gt;
&lt;li&gt;所有跨儲存引擎的功能也在這一層實現。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;SQL 接口(SQL interface)：負責接收使用者的 SQL 指令並返回所需的查詢結果。&lt;/li&gt;
&lt;li&gt;解析器(Parser)：負責驗證和解析傳遞到解析器的 SQL 指令。&lt;/li&gt;
&lt;li&gt;優化器(Optimizer)：在查詢執行前，使用查詢優化器對 SQL 語句進行優化，如根據 where 條件決定執行順序，例如先進行過濾還是先進行投影。&lt;/li&gt;
&lt;li&gt;快取與緩衝區(Caches &amp;amp; Buffers)：
&lt;ul&gt;
&lt;li&gt;如果查詢快取中有匹配的結果，查詢語句可以直接從查詢快取中獲取數據。&lt;/li&gt;
&lt;li&gt;這種快取機制由多個小型快取組成，例如表快取、記錄快取、鍵快取、權限快取等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3-儲存引擎層&#34;&gt;3. 儲存引擎層&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;負責 MySQL 中數據的存儲和檢索，伺服器透過 API 與存儲引擎進行交互。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-資料儲存層&#34;&gt;4. 資料儲存層&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主要將數據存儲在裸設備上運行的文件系統中，並實現與存儲引擎的互動。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql-查詢流程&#34;&gt;MySQL 查詢流程&lt;/h3&gt;
&lt;img src=&#34;mysql-search.png&#34; style=&#34;width: 900px; height: 600px;&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;圖片來自：https://iter01.com/581014.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;客戶端向 MySQL 伺服器發送查詢請求，經過進入 thread pool、授權檢查和分配 thread 的過程。&lt;/li&gt;
&lt;li&gt;伺服器首先檢查查詢快取，如果命中快取，則直接返回快取中的結果（同時進行權限檢查）。如果沒有命中快取，則進入下一階段。&lt;/li&gt;
&lt;li&gt;伺服器對 SQL 進行解析和預處理（包括處理解析器無法解決的語義問題和權限檢查），然後由優化器生成相應的執行計劃。&lt;/li&gt;
&lt;li&gt;MySQL 根據執行計劃，調用存儲引擎的 API 來執行查詢。&lt;/li&gt;
&lt;li&gt;將查詢結果返回給客戶端，並將查詢結果存入快取。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;參考文章&#34;&gt;參考文章&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://iter01.com/581014.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MySQL 的架構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/annsshadow/p/5037667.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;步步深入：MySQL 架構總覽 -&amp;gt; 查詢執行流程 -&amp;gt; SQL 解析順序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://allaboutdataanalysis.medium.com/%e5%a6%82%e4%bd%95%e9%81%bf%e5%85%8d%e5%88%86%e6%9e%90%e5%85%a9%e5%88%86%e9%90%98-%e9%81%8b%e8%a1%8c%e5%85%a9%e5%b0%8f%e6%99%82-%e9%80%99%e6%98%af%e4%b8%80%e4%bb%bdsql%e5%84%aa%e5%8c%96%e5%a4%a7%e5%85%a8-49e6c36f2b5f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何避免分析兩分鐘，運行兩小時？這是一份 SQL 優化大全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ChiTou</title>
        <link>https://peifish1124.github.io/p/project-chitou/</link>
        <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate>
        
        <guid>https://peifish1124.github.io/p/project-chitou/</guid>
        <description>&lt;img src="https://peifish1124.github.io/p/project-chitou/chitou-pic.png" alt="Featured image of post ChiTou" /&gt;&lt;p&gt;&lt;img src=&#34;github.png&#34; alt=&#34;alt text&#34; style=&#34;width: 20px; height: 20px; margin-bottom: -3px&#34;&gt; : &lt;a class=&#34;link&#34; href=&#34;https://github.com/peifish1124/ChiTou&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/peifish1124/ChiTou&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;後端技術架構&#34;&gt;後端技術架構&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Express.js、Nginx&lt;/li&gt;
&lt;li&gt;APIs: 中央氣象局開放資料 API、LINE Bot Messaging API、Google Search API、ChatGPT OpenAI&lt;/li&gt;
&lt;li&gt;Deploy: AWS EC2&lt;/li&gt;
&lt;li&gt;Database: AWS RDS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;發想動機&#34;&gt;發想動機&lt;/h3&gt;
&lt;p&gt;希望解決使用者在安排出遊的時候會遇到的問題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;懶得用編輯程式、共編規劃行程&lt;/li&gt;
&lt;li&gt;要開多個平台去整合各種資訊：用 Google docs 來紀錄、用 Google search 來查景點、用 Google map 來查景點間的距離、查詢天氣&lt;/li&gt;
&lt;li&gt;提出了多種方案但不知道大家想選哪個行程&lt;/li&gt;
&lt;li&gt;需要預估交通時間、停留時間&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我們 ChiTou 的核心概念就是：整合共編、Google Search、Google Map、天氣資訊 的平台，節省使用者在安排旅行所需要的時間，並提供包含旅程所需時間的最終規劃結果&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Canchu</title>
        <link>https://peifish1124.github.io/p/project-canchu/</link>
        <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
        
        <guid>https://peifish1124.github.io/p/project-canchu/</guid>
        <description>&lt;h3 id=&#34;後端技術架構&#34;&gt;後端技術架構&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;後端： Express.js&lt;/li&gt;
&lt;li&gt;AWS Cloud Service：AWS EC2、AWS RDS(MySQL)、AWS Load Balancer&lt;/li&gt;
&lt;li&gt;容器化工具：Docker&lt;/li&gt;
&lt;li&gt;CICD： GitHub Actions&lt;/li&gt;
&lt;li&gt;測試： Jest&lt;/li&gt;
&lt;li&gt;壓力測試：K6&lt;/li&gt;
&lt;li&gt;Cache、Rate Limiter：Redis&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基本實作&#34;&gt;基本實作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用 middleware 的方式實作 JWT 驗證使用者身份&lt;/li&gt;
&lt;li&gt;大頭貼部分是用 middleware 的方式透過 multer 來實作&lt;/li&gt;
&lt;li&gt;利用 cursor pagination 處理分頁&lt;/li&gt;
&lt;li&gt;使用 Redis 作為快取，以加速資料取得，並且作為 rate limiter，用 IP 來判斷使用者是否在一定時間內超過次數的進入網站&lt;/li&gt;
&lt;li&gt;前後端串接時申請 SSL 並處理 CORS 問題&lt;/li&gt;
&lt;li&gt;透過 Nginx 處理 Http/Https 的請求導向&lt;/li&gt;
&lt;li&gt;使用 Docker Container 執行 MySQL、Nginx、Redis &amp;amp; Express 程式（Canchu）&lt;/li&gt;
&lt;li&gt;透過 GitHub Actions 實作 CI/CD 完成自動化測試與部署至 Docker&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Pathfinder</title>
        <link>https://peifish1124.github.io/p/project-pathfinder/</link>
        <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://peifish1124.github.io/p/project-pathfinder/</guid>
        <description>&lt;img src="https://peifish1124.github.io/p/project-pathfinder/pathfinder-pic.png" alt="Featured image of post Pathfinder" /&gt;&lt;p&gt;&lt;img src=&#34;github.png&#34; alt=&#34;alt text&#34; style=&#34;width: 20px; height: 20px; margin-bottom: -3px&#34;&gt; : &lt;a class=&#34;link&#34; href=&#34;https://github.com/peifish1124/Pathfinder&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/peifish1124/Pathfinder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因應教育部的 108 新課綱，我們推出探索生涯方向的 APP - Pathfinder ，從一開始的現行方案分析、接續經過三階段需求確認與測試的市場調查，最後聚焦於創造出一個專屬於高中生學習歷程、生涯探索的 App。立基於 ColleGo! 網站資料上，Pathfinder 串接三大功能：紀錄面板、儀表分析板、探索活動板，以個人化推薦、整合性的功能為關鍵特色，旨在為使用者打造個別專屬的生涯探索之旅。&lt;/p&gt;
&lt;p&gt;在 APP 中我們採用文字探勘技術，協助高中生透過日常紀錄挖掘自我興趣與能力，而在過程中我們並非只著重在資訊技術上的精進，我們使用敏捷開發、階段式的做使用者調查訪問、與教育機構合作、規劃短中長期的發展模式等。&lt;/p&gt;
&lt;h3 id=&#34;系統架構圖&#34;&gt;系統架構圖&lt;/h3&gt;
&lt;img src=&#34;tech.png&#34;&gt;
&lt;ul&gt;
&lt;li&gt;前端：React Native&lt;/li&gt;
&lt;li&gt;後端：GraphQL&lt;/li&gt;
&lt;li&gt;部署：Heroku&lt;/li&gt;
&lt;li&gt;資料庫：非關聯式資料庫 mongoDB&lt;/li&gt;
&lt;li&gt;照片儲存：AWS S3&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
